import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ChimeSDKMessagingClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ChimeSDKMessagingClient";
import {
  PutMessagingStreamingConfigurationsRequest,
  PutMessagingStreamingConfigurationsResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface PutMessagingStreamingConfigurationsCommandInput
  extends PutMessagingStreamingConfigurationsRequest {}
export interface PutMessagingStreamingConfigurationsCommandOutput
  extends PutMessagingStreamingConfigurationsResponse,
    __MetadataBearer {}
export declare class PutMessagingStreamingConfigurationsCommand extends $Command<
  PutMessagingStreamingConfigurationsCommandInput,
  PutMessagingStreamingConfigurationsCommandOutput,
  ChimeSDKMessagingClientResolvedConfig
> {
  readonly input: PutMessagingStreamingConfigurationsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: PutMessagingStreamingConfigurationsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ChimeSDKMessagingClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    PutMessagingStreamingConfigurationsCommandInput,
    PutMessagingStreamingConfigurationsCommandOutput
  >;
  private serialize;
  private deserialize;
}
